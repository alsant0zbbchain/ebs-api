name: Hyperledger Besu Network
run-name: ${{ inputs.identifier }}

on:
  workflow_dispatch:
    inputs:
      BESU_CONSENSUS_ALG: 
        description: 'Algorithm'
        type: string            
        default: "QBFT" 
      BOOTNODES: 
        description: 'Quantity'
        type: string    
        required: true
      COMPONENT_ID: 
        description: 'Component id'
        type: string  
        required: true
      COMPONENT_NAME: 
        description: 'Component name'
        type: string  
        required: true 
      COUNTRY: 
        description: 'country'
        type: string  
      CUSTOMER_ID: 
        description: 'customer id'
        type: string     
        required: true    
      DNS_TYPE: 
        description: 'dns type'
        type: string     
        default: "public"   
      DNS_ZONE: 
        description: 'dns zone'
        type: string     
        default: "blockchainlab.network"  
      LOCATION: 
        description: 'location'
        type: string
      MIN_GAS_PRICE: 
        description: 'minimum gas price'
        type: string     
        default: "0"        
      NET_NAME: 
        description: 'network name'
        type: string     
        default: "ks-net"          
      NETWORK_ID: 
        description: 'network id'
        type: string           
      NODE_COUNT: 
        description: 'node count'
        type: string     
        default: "4"          
      ORGANIZATION: 
        description: 'organization'
        type: string     
      QUORUM_EXPLORER_IMAGE_TAG: 
        description: 'quorum explorer image id'
        type: string     
        default: "8091"   
      SUBNET_NAME: 
        description: 'subnet name'
        type: string     
        default: "ks-subnet"   
      VALIDATORS: 
        description: 'validators'
        type: string             
      identifier:
        description: 'Variable that represents the release identifier'
        required: true
        type: string  
      ENV:
        description: 'Variable that represents the environment'
        required: true
        type: string   

jobs:
  display-variables:
    name: "Teste"
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Use variables
      run: |
        echo "branch variable : $BRANCH"
        echo "ARTIFACT_REGISTRY variable : $ARTIFACT_REGISTRY"
        echo "CLIENT_ID variable : $CLIENT_ID"
        echo "secret : $AZURE_GIT_ACCESS_TOKEN"
      env:
        ARTIFACT_REGISTRY: ${{ vars.ARTIFACT_REGISTRY }}
        BRANCH: ${{ vars.BRANCH }}
        CLIENT_ID: ${{ vars.CLIENT_ID }}     
        AZURE_GIT_ACCESS_TOKEN: ${{ secrets.AZURE_GIT_ACCESS_TOKEN }}
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: dev
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: dev
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
