name: Hyperledger Besu Deploy Smart Contract Azure
run-name: ${{ inputs.identifier }}

on:
  workflow_dispatch:
    inputs:
      identifier:
        description: 'Variable that represents the release identifier'
        required: true
        type: string  
      parameters:
        description: 'Variables in json wrapped'
        required: true

jobs:
  check-required-env-variables:
    name: "required-env-variables"
    runs-on: runner-azure
    environment: dev-azure
    steps:
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(vars) }}
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}       
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ github.event.inputs.parameters }}
      - name: Checking APP_ID
        if: ${{ env.APP_ID == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('APP_ID is required')
      - name: Checking CONSTRUCTOR_VARS
        if: ${{ env.CONSTRUCTOR_VARS == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('CONSTRUCTOR_VARS is required')
      - name: Checking DEPLOY_ID
        if: ${{ env.DEPLOY_ID == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('DEPLOY_ID is required')
      - name: Checking CONTRACT_NAME
        if: ${{ env.CONTRACT_NAME == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('CONTRACT_NAME is required')    
      - name: Checking CONTRACT_PATH
        if: ${{ env.CONTRACT_PATH == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('CONTRACT_PATH is required')                              
      - name: Checking COMPONENT_ID
        if: ${{ env.COMPONENT_ID == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('COMPONENT_ID is required') 
      - name: Checking COMPONENT_NAME
        if: ${{ env.COMPONENT_NAME == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('COMPONENT_NAME is required')     
      - name: Checking CUSTOMER_ID
        if: ${{ env.CUSTOMER_ID == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('CUSTOMER_ID is required') 
      - name: Checking NETWORK_ID
        if: ${{ env.NETWORK_ID == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('NETWORK_ID is required')
      - name: Checking NETWORK_OWNER
        if: ${{ env.NETWORK_OWNER == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('NETWORK_OWNER is required')
      - name: Checking NODE_NAME
        if: ${{ env.NODE_NAME == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('NODE_NAME is required')
      - name: Checking RPC_PORT
        if: ${{ env.RPC_PORT == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('RPC_PORT is required')
      - name: Checking STORAGE_CONTAINER_NAME
        if: ${{ env.STORAGE_CONTAINER_NAME == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('STORAGE_CONTAINER_NAME is required')
      - name: Checking VERSION_NUMBER
        if: ${{ env.VERSION_NUMBER == '' }} 
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('VERSION_NUMBER is required')                                                                                        
                
  deploy-smart-contract:
    name: "deploy-smart-contract"
    runs-on: runner-azure
    needs: [check-required-env-variables]
    environment: dev-azure
    steps:
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(vars) }}
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}       
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ github.event.inputs.parameters }}    
      - name: Checkout Azure Besu DevOps repo
        run: |
          rm -rf ${{ vars.BESU_REPO_PATH }}
          git clone https://$(echo $AZURE_GIT_ACCESS_TOKEN)@${{ vars.BESU_REPO_URL }}
          cd ${{ vars.BESU_REPO_PATH }}
          git checkout ${{ vars.BRANCH }}
          echo "Cloned Azure DevOps repository"   
      - uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '${'
          tokenSuffix: '}'
          files: '["**/infra-requirements.yaml"]'
      - name: installing requirements
        run: |
          cd ${{ vars.BESU_REPO_PATH }}
          ansible-galaxy collection install -r infra-requirements.yaml
          echo "Requirements installed"          
      - name: Deploy API
        run: |
          cd ${{ vars.BESU_REPO_PATH }}
          ansible-playbook -i inventories/hosts.yaml ${{ vars.DEPLOY_APPS_PLAYBOOK }} --tags="login,smart_contract" -vvvv